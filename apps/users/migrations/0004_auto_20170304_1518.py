# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-04 20:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_auto_20170202_1300'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Not Available', max_length=30)),
                ('description', models.CharField(default='Not Available', max_length=150)),
                ('approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AreaOfInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=140)),
                ('last_name', models.CharField(max_length=140)),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('address', models.CharField(blank=True, max_length=140, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FuturePlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='MagnetProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30)),
                ('pathway', models.CharField(default='Not Available', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='MiscAccomplishment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=140)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('address', models.CharField(max_length=30)),
                ('zip', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=30)),
                ('website', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=240)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Employer')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='story',
            field=tinymce.models.HTMLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='student_id',
            field=models.CharField(max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='employee',
            name='employer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Employer'),
        ),
        migrations.AddField(
            model_name='student',
            name='accomplishments',
            field=models.ManyToManyField(blank=True, to='users.MiscAccomplishment'),
        ),
        migrations.AddField(
            model_name='student',
            name='activities',
            field=models.ManyToManyField(blank=True, to='users.Activity'),
        ),
        migrations.AddField(
            model_name='student',
            name='areas_of_interest',
            field=models.ManyToManyField(blank=True, to='users.AreaOfInterest'),
        ),
        migrations.AddField(
            model_name='student',
            name='competitions',
            field=models.ManyToManyField(blank=True, to='users.Competition'),
        ),
        migrations.AddField(
            model_name='student',
            name='employers',
            field=models.ManyToManyField(blank=True, to='users.Employer'),
        ),
        migrations.AddField(
            model_name='student',
            name='future_plans',
            field=models.ManyToManyField(blank=True, to='users.FuturePlan'),
        ),
        migrations.AddField(
            model_name='student',
            name='hobbies',
            field=models.ManyToManyField(blank=True, to='users.Hobby'),
        ),
        migrations.AddField(
            model_name='student',
            name='magnet_program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.MagnetProgram'),
        ),
        migrations.AddField(
            model_name='student',
            name='projects',
            field=models.ManyToManyField(blank=True, to='users.Project'),
        ),
        migrations.AddField(
            model_name='student',
            name='quotes',
            field=models.ManyToManyField(blank=True, to='users.Quote'),
        ),
        migrations.AddField(
            model_name='student',
            name='reviews',
            field=models.ManyToManyField(blank=True, to='users.Review'),
        ),
        migrations.AddField(
            model_name='student',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.School'),
        ),
        migrations.AddField(
            model_name='student',
            name='tasks',
            field=models.ManyToManyField(blank=True, to='users.Task'),
        ),
    ]
